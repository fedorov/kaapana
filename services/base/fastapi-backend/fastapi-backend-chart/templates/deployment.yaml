---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fastapi-backend
  namespace: {{ .Values.global.base_namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app-name: fastapi-backend
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app-name: fastapi-backend
    spec:
      initContainers:
        - name: init-wait-for-postgres
          image: {{  .Values.global.registry_url }}/service_checker:1.1
          imagePullPolicy:  {{ .Values.global.pull_policy_pods }}
          env:
            - name: WAIT
              value: "fastapi-postgres,fastapi-postgres-service.base.svc,5432"
            - name: DELAY
              value: "2"
            - name: TIMEOUT
              value: "10"
        - name: init-wait-for-keycloak
          image: {{  .Values.global.registry_url }}/service_checker:1.1
          imagePullPolicy:  {{ .Values.global.pull_policy_pods }}
          env:
            - name: WAIT
              value: "keycloak,keycloak-internal-service.kube-system.svc,443"
            - name: DELAY
              value: "2"
            - name: TIMEOUT
              value: "10"
        - name: init-create-backend-user
          image: {{  .Values.global.registry_url }}/fastapi-backend:0.1.0
          imagePullPolicy:  {{ .Values.global.pull_policy_pods }}
          command: ["/app/scripts/create_backend_user.py"]
          env:
            - name: KEYCLOAK_URL
              value: {{ .Values.global.keycloak.url }}
            - name: KEYCLOAK_ADMIN_USER
              value: {{ .Values.global.keycloak.admin_user.username }}
            - name: KEYCLOAK_ADMIN_PASS
              value: {{ .Values.global.keycloak.admin_user.password }}
            - name: KEYCLOAK_BACKEND_USER
              value: {{ .Values.global.keycloak.backend_user.username }}
            - name: KEYCLOAK_BACKEND_PASS
              value: {{ .Values.global.keycloak.backend_user.password }}
            - name: KEYCLOAK_BACKEND_ROLES
              value: "query-groups;query-users;view-users"
      containers:
      - name: fastapi-backend
        image: {{  .Values.global.registry_url }}/fastapi-backend:0.1.0
        imagePullPolicy:  {{ .Values.global.pull_policy_pods }}
        # command: ["tail"]
        # args: ["-f", "/dev/null"] 
        command: ["/bin/sh"]
        args: ["/app/boot.sh"] 
        env: # Environment variables
        - name: SECRET_KEY
          value: kaapana-secret
        - name: NODE_ID
          value: {{ .Values.global.node_id }}
        - name: HOSTNAME
          value: {{ .Values.global.hostname }}
        - name: HTTPS_PORT
          value: {{ .Values.global.https_port | quote }}
{{- if .Values.global.http_proxy }}
        - name: http_proxy
          value: {{ .Values.global.http_proxy }}
{{- end }}
{{- if .Values.global.https_proxy }}
        - name: https_proxy
          value: {{ .Values.global.https_proxy }}
{{- end }}
        - name: APPLICATION_ROOT
          value: "/fastapi-backend"
        - name: DATABASE_URL
          value: postgresql://someuser:somepassword@fastapi-postgres-service.base.svc:5432
        - name: KUBE_HELM_URL
          value: "http://kube-helm-service.kube-system.svc:5000/kube-helm-api"
        - name: PROMETHEUS_URL
          value: {{ .Values.global.prometheus_url }}
        - name: KEYCLOAK_URL
          value: {{ .Values.global.keycloak.url }}
        - name: KEYCLOAK_USER
          value: {{ .Values.global.keycloak.backend_user.username }}
        - name: KEYCLOAK_PASSWORD
          value: {{ .Values.global.keycloak.backend_user.password }}
        - name: MINIO_URL
          value: {{ .Values.global.minio.url }}
        - name: MINIO_ACCESS_KEY
          value: {{ .Values.global.minio.access_key }}
        - name: MINIO_SECRET_KEY
          value: {{ .Values.global.minio.secret_key }}
        ports:
          - containerPort: 5000
        resources:
          limits:
            memory: "1Gi"
          requests:
            memory: "100Mi"
        volumeMounts:
        - name: fastapi-dev-files
          mountPath: /app
        - name: alembic
          mountPath: /app/alembic
      imagePullSecrets:
        - name: registry-secret
      volumes:
      - name: alembic
        hostPath:
          # path: /home/ubuntu/dev/fastapi-backend/docker/files
          path: /home/kaapana/alembic-fastapi-backend
          type: DirectoryOrCreate
      - name: fastapi-dev-files
        hostPath:
          # path: /home/ubuntu/dev/fastapi-backend/docker/files
          path: /home/ubuntu/dev/fastapi-backend/docker-fastapi/files
          type: DirectoryOrCreate
---